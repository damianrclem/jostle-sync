# this is a simple docker compose that has been tested to work with gitpod,
# for running these samples in the browser with no need to run Temporal Server locally
# thanks to Johannes Schickling for figuring this out
# see https://github.com/temporalio/docker-compose for other reference docker-compose files
version: '3.5'
services:
  postgresql:
    container_name: jostle-ad-sync-temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:13.4
    # networks:
    # - temporal-network
    ports:
      - 5432:5432
    volumes:
      - ./db.sql:/docker-entrypoint-initdb.d/db.sql
  temporal:
    container_name: jostle-ad-sync-temporal
    depends_on:
      - postgresql
    #  - elasticsearch
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development_es.yaml
    #  - ENABLE_ES=true
    #  - ES_SEEDS=elasticsearch
    #  - ES_VERSION=v7
    image: temporalio/auto-setup:1.12.3
    # networks:
    # - temporal-network
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
  temporal-admin-tools:
    container_name: jostle-ad-sync-temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.12.3
    # networks:
    # - temporal-network
    stdin_open: true
    tty: true
  temporal-web:
    container_name: jostle-ad-sync-temporal-web
    depends_on:
      - temporal
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
      - TEMPORAL_PERMIT_WRITE_API=true
    image: temporalio/web:1.12.0
    # networks:
    # - temporal-network
    ports:
      - 8088:8088
